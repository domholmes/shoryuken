<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container-fluid">
            <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            </button>
            <a class="brand" href="#"><span>Smart</span>Reminder</a>
            <div class="nav-collapse collapse">
            <p class="navbar-text pull-right">
              @Html.ActionLink("Logout", "LogOff", "Account", null, null)
            </p>
            <ul class="nav">
                <li class="">
                    <a href="#">Some</a>
                </li>
                <li class="">
                    <a href="#">Nav</a>
                </li>
                <li class="">
                    <a href="#">Items</a>
                </li>
            </ul>
            </div>
        </div>
    </div>
</div>
<div id="body">
    <div class="row-fluid">
        <div class="span12 margin-bottom">
            <button type="button" class="btn btn-large add-reminder" data-bind="click: createReminder, css: { disabled: !canAddNew() }">
                <span class="icon icon-pencil"></span>Add Reminder</button>
        </div>
    </div>    
    
    <section class="row-fluid" data-bind="foreachGroups: reminders">
        <div class="card-wrap" data-bind="foreach: $data">
            <article data-bind="
                animateToState: editing() ? 'edit' : 'display', 
                initialState: 'display', 
                attr: { 
                    'class': 'card margin-bottom ' + $parent.spanClass 
                }, 
                css: { 
                    disabled: (!enabled() && !editing()),
                    editing: editing
                }" >
                <div class="display" data-bind="click: cardDisplayClick">                                           
                    <div class="body">
                        <h2 data-bind="visible: name() != '', text: name">
                        </h2>
                        <button class="icon-menu-2 link-emulate" data-bind="click: $root.beginReminderEdit, invisible: $root.editing()"></button> 
                        <p data-bind="text: message" class="message">
                        </p>
                    </div>                    
                </div>
                <div class="edit">
                    <div class="body">
                      
                        <div class="control-group">                     
                            <textarea placeholder="Name" data-bind="value: name, expandingTextbox: true" class="name" rows="1" cols="1" ></textarea><br />
                            <textarea placeholder="Message (required)" data-bind="value: message, expandingTextbox: true, css: { 'validation-highlight': propertiesWithErrors.indexOf('message') > -1 }" rows="1" cols="1"></textarea>
                        </div> 

                        <div class="control-group">
                            <select data-bind="options: availableEvents, optionsText: 'text', optionsValue: 'value', value: actionId, optionsCaption: 'Select an action'">
                            </select>
                            <textarea placeholder="Wifi SSID" data-bind="value: ssid, visible: showSSIDField" class="ssid" rows="1" cols="1" ></textarea>
                            <textarea placeholder="Place name or address" data-bind="addressAutocomplete: placeName, visible: showAddressField" class="" rows="1" cols="1" ></textarea>
                        </div>
                        
                        <div class="control-group">
                            <div class="time-shortcuts pull-right">
                                <button data-bind="setTimePeriod: 'AM', css: { toggleButton: true, active: isSetToAM }">AM</button> | 
                                <button data-bind="setTimePeriod: 'PM', css: { toggleButton: true, active: isSetToPM }">PM</button> | 
                                <button data-bind="setTimePeriod: 'Whenever', css: { toggleButton: true, active: isSetToWhenever }">Whenever</button>
                            </div>
                            <div class="input-append bootstrap-timepicker">
                                <input type="text" class="input-small timepicker" placeholder="Start time (required)" data-bind="timePicker: startTime" /><span
                                    class="add-on"><i class="icon-time"></i></span><br />
                            </div>
                            <div class="input-append bootstrap-timepicker">
                                <input type="text" class="input-small timepicker" placeholder="End time (required)" data-bind="timePicker: endTime" /><span
                                    class="add-on"><i class="icon-time"></i></span>
                            </div>
                        </div>

                        <div class="control-group">
                            <div class="days" data-bind="foreach: availableDays, css: { 'validation-highlight': propertiesWithErrors.indexOf('days') > -1 }">
                                <button data-bind="text: name, click: $parent.changeDay, css: { toggleButton: true, active: $parent.isDaySelected($data) }">
                                </button>
                            </div> 
                        </div>  
                        
                        <div class="control-group">
                            <button class="link-emulate" data-bind="click: toggleRepeat"><i class="icon-checkbox-checked" data-bind="visible: repeat"></i><i data-bind="visible: !repeat()" class="icon-checkbox-unchecked"></i> Repeat</button>
                        </div> 
                        
                        <div class="control-group">                    
                            <div class="enable-actions">
                                <button class="link-emulate" data-bind="click: enable"><i class="icon-checkbox-checked" data-bind="visible: enabled"></i><i data-bind="visible: !enabled()" class="icon-checkbox-unchecked"></i> Enabled</button>
                            </div>
                        </div>

                        <div data-bind="foreach: errors">
                            <div  class="validation-error" data-bind="text: $data"></div>
                        </div>

                    </div>
                    <footer>
                        <button class="link-emulate" data-bind="
                            text: 'Save',
                            click: $root.reminderSaveClick, 
                            css: { 
                                busy: saving, 
                                disabled: deleting 
                            }"></button><button class="link-emulate" data-bind="
                            text: 'Cancel',
                            click: $root.reminderCancelClick
                            "></button><button class="link-emulate" data-bind="
                                click: $root.reminderDeleteClick, 
                                text: deleting() ? 'Really?' : 'Delete'
                            "></button>                        
                    </footer>
                </div>
            </article>
        </div>
    </section>
</div>
<div class="loader" data-bind="css: { active: loading }">
  <div class="duo duo1">
    <div class="dot dot-a"></div>
    <div class="dot dot-b"></div>
  </div>
  <div class="duo duo2">
    <div class="dot dot-a"></div>
    <div class="dot dot-b"></div>
  </div>
</div>
@section scripts
{
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=places&sensor=false&language=en"></script>

    @Scripts.Render("~/bundles/index")   

}
